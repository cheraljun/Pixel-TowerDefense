// AUTO-GENERATED. Do not edit manually.
// Generated by scripts/generateCanvasRecipes.js

const recipes = {
  tower: {
    basic: [
      `
ctx.fillStyle = 'rgba(36, 128, 18, 1.000)';
ctx.fillRect(168, 24, 432, 24);
ctx.fillRect(168, 48, 32, 96);
ctx.fillRect(24, 168, 120, 32);
ctx.fillRect(624, 168, 120, 32);
ctx.fillRect(24, 200, 24, 400);
ctx.fillRect(624, 200, 24, 144);
ctx.fillRect(144, 320, 480, 24);
ctx.fillRect(168, 624, 432, 24);
ctx.fillRect(168, 648, 32, 96);
ctx.fillStyle = 'rgba(49, 173, 24, 1.000)';
ctx.fillRect(600, 24, 32, 144);
ctx.fillRect(168, 144, 432, 32);
ctx.fillRect(144, 168, 24, 152);
ctx.fillRect(600, 168, 24, 8);
ctx.fillRect(744, 168, 32, 464);
ctx.fillRect(168, 176, 8, 144);
ctx.fillRect(144, 448, 480, 32);
ctx.fillRect(144, 480, 32, 144);
ctx.fillRect(24, 600, 120, 32);
ctx.fillRect(624, 600, 120, 32);
ctx.fillRect(144, 624, 24, 8);
ctx.fillRect(600, 624, 24, 152);
ctx.fillRect(624, 632, 8, 144);
ctx.fillRect(168, 744, 432, 32);
ctx.fillStyle = 'rgba(41, 145, 20, 1.000)';
ctx.fillRect(200, 48, 400, 96);
ctx.fillRect(48, 200, 96, 400);
ctx.fillRect(648, 200, 96, 400);
ctx.fillRect(144, 344, 504, 104);
ctx.fillRect(624, 448, 24, 24);
ctx.fillRect(200, 648, 400, 96);
ctx.fillStyle = 'rgba(38, 135, 19, 1.000)';
ctx.fillRect(624, 472, 24, 128);
      `,
      `
ctx.fillStyle = 'rgba(36, 128, 18, 1.000)';
ctx.fillRect(168, 24, 432, 24);
ctx.fillRect(168, 48, 32, 96);
ctx.fillRect(24, 168, 120, 32);
ctx.fillRect(624, 168, 120, 32);
ctx.fillRect(24, 200, 24, 400);
ctx.fillRect(624, 200, 24, 144);
ctx.fillRect(144, 320, 480, 24);
ctx.fillRect(168, 624, 432, 24);
ctx.fillRect(168, 648, 32, 96);
ctx.fillStyle = 'rgba(49, 173, 24, 1.000)';
ctx.fillRect(600, 24, 32, 144);
ctx.fillRect(168, 144, 432, 32);
ctx.fillRect(144, 168, 24, 152);
ctx.fillRect(600, 168, 24, 8);
ctx.fillRect(744, 168, 32, 464);
ctx.fillRect(168, 176, 8, 144);
ctx.fillRect(144, 448, 480, 32);
ctx.fillRect(144, 480, 32, 144);
ctx.fillRect(24, 600, 120, 32);
ctx.fillRect(624, 600, 120, 32);
ctx.fillRect(144, 624, 24, 8);
ctx.fillRect(600, 624, 24, 152);
ctx.fillRect(624, 632, 8, 144);
ctx.fillRect(168, 744, 432, 32);
ctx.fillStyle = 'rgba(41, 145, 20, 1.000)';
ctx.fillRect(200, 48, 400, 96);
ctx.fillRect(48, 200, 96, 400);
ctx.fillRect(648, 200, 96, 400);
ctx.fillRect(144, 344, 504, 104);
ctx.fillRect(624, 448, 24, 24);
ctx.fillRect(200, 648, 400, 96);
ctx.fillStyle = 'rgba(38, 135, 19, 1.000)';
ctx.fillRect(624, 472, 24, 128);
      `,
      `
ctx.fillStyle = 'rgba(36, 128, 18, 1.000)';
ctx.fillRect(168, 24, 432, 24);
ctx.fillRect(168, 48, 32, 96);
ctx.fillRect(24, 168, 120, 32);
ctx.fillRect(624, 168, 120, 32);
ctx.fillRect(24, 200, 24, 400);
ctx.fillRect(624, 200, 24, 296);
ctx.fillRect(320, 320, 128, 24);
ctx.fillRect(320, 344, 24, 104);
ctx.fillRect(168, 624, 432, 24);
ctx.fillRect(168, 648, 32, 96);
ctx.fillStyle = 'rgba(49, 173, 24, 1.000)';
ctx.fillRect(600, 24, 32, 144);
ctx.fillRect(168, 144, 432, 32);
ctx.fillRect(144, 168, 24, 464);
ctx.fillRect(600, 168, 24, 8);
ctx.fillRect(744, 168, 32, 464);
ctx.fillRect(168, 176, 8, 448);
ctx.fillRect(448, 320, 32, 160);
ctx.fillRect(320, 448, 128, 32);
ctx.fillRect(24, 600, 120, 32);
ctx.fillRect(624, 600, 120, 32);
ctx.fillRect(600, 624, 24, 152);
ctx.fillRect(624, 632, 8, 144);
ctx.fillRect(168, 744, 432, 32);
ctx.fillStyle = 'rgba(41, 145, 20, 1.000)';
ctx.fillRect(200, 48, 400, 96);
ctx.fillRect(48, 200, 96, 400);
ctx.fillRect(648, 200, 96, 400);
ctx.fillRect(344, 344, 104, 104);
ctx.fillRect(200, 648, 400, 96);
ctx.fillStyle = 'rgba(38, 135, 19, 1.000)';
ctx.fillRect(624, 496, 24, 104);
      `
    ],
    slow: [
      `
ctx.fillStyle = 'rgba(30, 57, 196, 1.000)';
ctx.fillRect(168, 24, 464, 24);
ctx.fillRect(168, 48, 32, 152);
ctx.fillRect(24, 168, 144, 32);
ctx.fillRect(472, 168, 24, 128);
ctx.fillRect(624, 168, 152, 32);
ctx.fillRect(24, 200, 24, 400);
ctx.fillRect(320, 320, 152, 24);
ctx.fillRect(624, 320, 24, 176);
ctx.fillRect(320, 344, 24, 104);
ctx.fillRect(168, 472, 152, 24);
ctx.fillRect(472, 472, 152, 24);
ctx.fillRect(472, 496, 24, 152);
ctx.fillRect(168, 624, 32, 120);
ctx.fillRect(320, 624, 152, 24);
ctx.fillStyle = 'rgba(36, 70, 240, 1.000)';
ctx.fillRect(200, 48, 400, 96);
ctx.fillRect(200, 144, 96, 152);
ctx.fillRect(496, 144, 104, 152);
ctx.fillRect(48, 200, 152, 96);
ctx.fillRect(600, 200, 144, 96);
ctx.fillRect(48, 296, 96, 304);
ctx.fillRect(648, 296, 96, 304);
ctx.fillRect(344, 344, 104, 104);
ctx.fillRect(144, 496, 152, 104);
ctx.fillRect(496, 496, 152, 104);
ctx.fillRect(200, 600, 96, 144);
ctx.fillRect(496, 600, 104, 144);
ctx.fillRect(296, 648, 200, 96);
ctx.fillStyle = 'rgba(89, 100, 255, 1.000)';
ctx.fillRect(600, 48, 32, 120);
ctx.fillRect(296, 144, 200, 24);
ctx.fillRect(296, 168, 24, 152);
ctx.fillRect(600, 168, 24, 32);
ctx.fillRect(744, 200, 32, 432);
ctx.fillRect(144, 296, 152, 24);
ctx.fillRect(472, 296, 176, 24);
ctx.fillRect(144, 320, 24, 176);
ctx.fillRect(448, 344, 24, 128);
ctx.fillRect(320, 448, 128, 24);
ctx.fillRect(296, 496, 24, 152);
ctx.fillRect(24, 600, 176, 24);
ctx.fillRect(600, 600, 144, 32);
ctx.fillRect(24, 624, 144, 8);
ctx.fillRect(600, 632, 32, 144);
ctx.fillRect(168, 744, 432, 32);
ctx.fillStyle = 'rgba(57, 175, 194, 1.000)';
ctx.fillRect(320, 168, 152, 32);
ctx.fillRect(320, 200, 24, 96);
ctx.fillRect(168, 320, 152, 24);
ctx.fillRect(472, 320, 152, 24);
ctx.fillRect(168, 344, 32, 104);
ctx.fillRect(472, 344, 24, 104);
ctx.fillRect(320, 472, 152, 24);
ctx.fillRect(320, 496, 24, 104);
ctx.fillStyle = 'rgba(73, 226, 250, 1.000)';
ctx.fillRect(344, 200, 104, 96);
ctx.fillRect(200, 344, 96, 104);
ctx.fillRect(496, 344, 104, 104);
ctx.fillRect(344, 496, 104, 104);
ctx.fillStyle = 'rgba(160, 229, 250, 1.000)';
ctx.fillRect(448, 200, 24, 120);
ctx.fillRect(320, 296, 128, 24);
ctx.fillRect(296, 344, 24, 128);
ctx.fillRect(600, 344, 24, 128);
ctx.fillRect(168, 448, 128, 24);
ctx.fillRect(472, 448, 128, 24);
ctx.fillRect(448, 496, 24, 128);
ctx.fillRect(320, 600, 128, 24);
      `,
      `
ctx.fillStyle = 'rgba(30, 57, 196, 1.000)';
ctx.fillRect(168, 24, 152, 24);
ctx.fillRect(472, 24, 160, 24);
ctx.fillRect(168, 48, 32, 152);
ctx.fillRect(472, 48, 24, 248);
ctx.fillRect(24, 168, 144, 32);
ctx.fillRect(624, 168, 152, 32);
ctx.fillRect(24, 200, 24, 96);
ctx.fillRect(24, 472, 296, 24);
ctx.fillRect(472, 472, 304, 24);
ctx.fillRect(24, 496, 24, 104);
ctx.fillRect(472, 496, 24, 248);
ctx.fillRect(168, 624, 32, 120);
ctx.fillStyle = 'rgba(57, 175, 194, 1.000)';
ctx.fillRect(320, 24, 152, 24);
ctx.fillRect(320, 48, 24, 296);
ctx.fillRect(24, 320, 296, 24);
ctx.fillRect(472, 320, 304, 24);
ctx.fillRect(24, 344, 24, 128);
ctx.fillRect(320, 472, 24, 304);
ctx.fillStyle = 'rgba(36, 70, 240, 1.000)';
ctx.fillRect(200, 48, 96, 248);
ctx.fillRect(496, 48, 104, 248);
ctx.fillRect(48, 200, 152, 96);
ctx.fillRect(600, 200, 144, 96);
ctx.fillRect(48, 496, 248, 104);
ctx.fillRect(496, 496, 248, 104);
ctx.fillRect(200, 600, 96, 144);
ctx.fillRect(496, 600, 104, 144);
ctx.fillStyle = 'rgba(89, 100, 255, 1.000)';
ctx.fillRect(296, 48, 24, 272);
ctx.fillRect(600, 48, 32, 120);
ctx.fillRect(600, 168, 24, 32);
ctx.fillRect(744, 200, 32, 120);
ctx.fillRect(24, 296, 272, 24);
ctx.fillRect(472, 296, 272, 24);
ctx.fillRect(296, 496, 24, 280);
ctx.fillRect(744, 496, 32, 136);
ctx.fillRect(24, 600, 176, 24);
ctx.fillRect(600, 600, 144, 32);
ctx.fillRect(24, 624, 144, 8);
ctx.fillRect(600, 632, 32, 144);
ctx.fillRect(168, 744, 128, 32);
ctx.fillRect(472, 744, 128, 32);
ctx.fillStyle = 'rgba(73, 226, 250, 1.000)';
ctx.fillRect(344, 48, 104, 696);
ctx.fillRect(48, 344, 296, 104);
ctx.fillRect(448, 344, 296, 104);
ctx.fillStyle = 'rgba(160, 229, 250, 1.000)';
ctx.fillRect(448, 48, 24, 296);
ctx.fillRect(744, 344, 32, 128);
ctx.fillRect(48, 448, 296, 24);
ctx.fillRect(448, 448, 296, 24);
ctx.fillRect(448, 472, 24, 304);
ctx.fillRect(344, 744, 104, 32);
      `,
      `
ctx.fillStyle = 'rgba(30, 57, 196, 1.000)';
ctx.fillRect(168, 24, 464, 24);
ctx.fillRect(168, 48, 32, 120);
ctx.fillRect(24, 168, 144, 32);
ctx.fillRect(320, 168, 24, 128);
ctx.fillRect(624, 168, 152, 32);
ctx.fillRect(24, 200, 24, 400);
ctx.fillRect(624, 200, 24, 144);
ctx.fillRect(168, 320, 152, 24);
ctx.fillRect(472, 320, 152, 24);
ctx.fillRect(472, 344, 24, 128);
ctx.fillRect(624, 448, 24, 152);
ctx.fillRect(320, 472, 152, 24);
ctx.fillRect(320, 496, 24, 152);
ctx.fillRect(168, 624, 152, 24);
ctx.fillRect(448, 624, 184, 24);
ctx.fillRect(168, 648, 32, 96);
ctx.fillStyle = 'rgba(36, 70, 240, 1.000)';
ctx.fillRect(200, 48, 400, 96);
ctx.fillRect(344, 144, 104, 152);
ctx.fillRect(48, 200, 96, 400);
ctx.fillRect(648, 200, 96, 400);
ctx.fillRect(144, 344, 152, 104);
ctx.fillRect(496, 344, 152, 104);
ctx.fillRect(344, 496, 104, 248);
ctx.fillRect(200, 648, 144, 96);
ctx.fillRect(448, 648, 152, 96);
ctx.fillStyle = 'rgba(89, 100, 255, 1.000)';
ctx.fillRect(600, 48, 32, 120);
ctx.fillRect(200, 144, 144, 24);
ctx.fillRect(448, 144, 152, 24);
ctx.fillRect(448, 168, 24, 152);
ctx.fillRect(144, 200, 24, 144);
ctx.fillRect(744, 200, 32, 432);
ctx.fillRect(320, 296, 128, 24);
ctx.fillRect(296, 344, 24, 128);
ctx.fillRect(144, 448, 152, 24);
ctx.fillRect(496, 448, 128, 24);
ctx.fillRect(144, 472, 24, 160);
ctx.fillRect(448, 496, 24, 128);
ctx.fillRect(24, 600, 120, 32);
ctx.fillRect(624, 600, 120, 24);
ctx.fillRect(632, 624, 112, 8);
ctx.fillRect(600, 648, 32, 128);
ctx.fillRect(168, 744, 432, 32);
ctx.fillStyle = 'rgba(57, 175, 194, 1.000)';
ctx.fillRect(168, 168, 152, 32);
ctx.fillRect(472, 168, 152, 32);
ctx.fillRect(168, 200, 32, 120);
ctx.fillRect(472, 200, 24, 120);
ctx.fillRect(320, 320, 152, 24);
ctx.fillRect(320, 344, 24, 128);
ctx.fillRect(168, 472, 152, 24);
ctx.fillRect(472, 472, 152, 24);
ctx.fillRect(168, 496, 32, 128);
ctx.fillRect(472, 496, 24, 128);
ctx.fillStyle = 'rgba(73, 226, 250, 1.000)';
ctx.fillRect(200, 200, 96, 96);
ctx.fillRect(496, 200, 104, 96);
ctx.fillRect(344, 344, 104, 104);
ctx.fillRect(200, 496, 96, 104);
ctx.fillRect(496, 496, 104, 104);
ctx.fillStyle = 'rgba(160, 229, 250, 1.000)';
ctx.fillRect(296, 200, 24, 120);
ctx.fillRect(600, 200, 24, 120);
ctx.fillRect(200, 296, 96, 24);
ctx.fillRect(496, 296, 104, 24);
ctx.fillRect(448, 344, 24, 128);
ctx.fillRect(344, 448, 104, 24);
ctx.fillRect(296, 496, 24, 128);
ctx.fillRect(600, 496, 24, 128);
ctx.fillRect(200, 600, 96, 24);
ctx.fillRect(496, 600, 104, 24);
      `
    ],
    fast: [
      `
ctx.fillStyle = 'rgba(179, 75, 23, 1.000)';
ctx.fillRect(320, 24, 160, 24);
ctx.fillRect(320, 48, 24, 96);
ctx.fillRect(24, 320, 144, 24);
ctx.fillRect(320, 320, 152, 24);
ctx.fillRect(624, 320, 152, 24);
ctx.fillRect(24, 344, 24, 104);
ctx.fillRect(320, 344, 24, 104);
ctx.fillRect(624, 344, 24, 104);
ctx.fillRect(320, 624, 160, 24);
ctx.fillRect(320, 648, 24, 96);
ctx.fillStyle = 'rgba(209, 88, 27, 1.000)';
ctx.fillRect(344, 48, 104, 96);
ctx.fillRect(48, 344, 96, 104);
ctx.fillRect(344, 344, 104, 104);
ctx.fillRect(648, 344, 96, 104);
ctx.fillRect(344, 648, 104, 96);
ctx.fillStyle = 'rgba(255, 107, 33, 1.000)';
ctx.fillRect(448, 48, 32, 120);
ctx.fillRect(320, 144, 128, 24);
ctx.fillRect(144, 344, 24, 136);
ctx.fillRect(448, 344, 24, 128);
ctx.fillRect(744, 344, 32, 136);
ctx.fillRect(24, 448, 120, 32);
ctx.fillRect(320, 448, 128, 24);
ctx.fillRect(624, 448, 120, 24);
ctx.fillRect(632, 472, 112, 8);
ctx.fillRect(448, 648, 32, 128);
ctx.fillRect(320, 744, 128, 32);
ctx.fillStyle = 'rgba(179, 36, 32, 1.000)';
ctx.fillRect(168, 168, 464, 32);
ctx.fillRect(168, 200, 32, 400);
ctx.fillRect(472, 296, 24, 200);
ctx.fillRect(296, 472, 176, 24);
ctx.fillStyle = 'rgba(209, 43, 38, 1.000)';
ctx.fillRect(200, 200, 400, 96);
ctx.fillRect(200, 296, 96, 304);
ctx.fillRect(496, 296, 104, 304);
ctx.fillRect(296, 496, 200, 104);
ctx.fillStyle = 'rgba(255, 52, 46, 1.000)';
ctx.fillRect(600, 200, 32, 120);
ctx.fillRect(296, 296, 176, 24);
ctx.fillRect(296, 320, 24, 152);
ctx.fillRect(600, 320, 24, 312);
ctx.fillRect(624, 472, 8, 160);
ctx.fillRect(168, 600, 432, 24);
ctx.fillRect(168, 624, 152, 8);
ctx.fillRect(480, 624, 120, 8);
      `,
      `
ctx.fillStyle = 'rgba(179, 36, 32, 1.000)';
ctx.fillRect(168, 24, 152, 24);
ctx.fillRect(472, 24, 160, 24);
ctx.fillRect(168, 48, 32, 152);
ctx.fillRect(472, 48, 24, 248);
ctx.fillRect(24, 168, 144, 32);
ctx.fillRect(624, 168, 152, 32);
ctx.fillRect(24, 200, 24, 96);
ctx.fillRect(320, 320, 152, 24);
ctx.fillRect(320, 344, 24, 104);
ctx.fillRect(24, 472, 296, 24);
ctx.fillRect(472, 472, 304, 24);
ctx.fillRect(24, 496, 24, 104);
ctx.fillRect(472, 496, 24, 248);
ctx.fillRect(168, 624, 32, 120);
ctx.fillStyle = 'rgba(179, 75, 23, 1.000)';
ctx.fillRect(320, 24, 152, 24);
ctx.fillRect(320, 48, 24, 248);
ctx.fillRect(24, 320, 296, 24);
ctx.fillRect(472, 320, 304, 24);
ctx.fillRect(24, 344, 24, 104);
ctx.fillRect(472, 344, 24, 104);
ctx.fillRect(320, 472, 152, 24);
ctx.fillRect(320, 496, 24, 248);
ctx.fillStyle = 'rgba(209, 43, 38, 1.000)';
ctx.fillRect(200, 48, 96, 248);
ctx.fillRect(496, 48, 104, 248);
ctx.fillRect(48, 200, 152, 96);
ctx.fillRect(600, 200, 144, 96);
ctx.fillRect(344, 344, 104, 104);
ctx.fillRect(48, 496, 248, 104);
ctx.fillRect(496, 496, 248, 104);
ctx.fillRect(200, 600, 96, 144);
ctx.fillRect(496, 600, 104, 144);
ctx.fillStyle = 'rgba(255, 52, 46, 1.000)';
ctx.fillRect(296, 48, 24, 272);
ctx.fillRect(600, 48, 32, 120);
ctx.fillRect(600, 168, 24, 32);
ctx.fillRect(744, 200, 32, 120);
ctx.fillRect(24, 296, 272, 24);
ctx.fillRect(472, 296, 272, 24);
ctx.fillRect(296, 496, 24, 280);
ctx.fillRect(744, 496, 32, 136);
ctx.fillRect(24, 600, 176, 24);
ctx.fillRect(600, 600, 144, 32);
ctx.fillRect(24, 624, 144, 8);
ctx.fillRect(600, 632, 32, 144);
ctx.fillRect(168, 744, 128, 32);
ctx.fillRect(472, 744, 128, 32);
ctx.fillStyle = 'rgba(209, 88, 27, 1.000)';
ctx.fillRect(344, 48, 104, 248);
ctx.fillRect(48, 344, 248, 104);
ctx.fillRect(496, 344, 248, 104);
ctx.fillRect(344, 496, 104, 248);
ctx.fillStyle = 'rgba(255, 107, 33, 1.000)';
ctx.fillRect(448, 48, 24, 272);
ctx.fillRect(320, 296, 128, 24);
ctx.fillRect(296, 344, 24, 128);
ctx.fillRect(744, 344, 32, 128);
ctx.fillRect(24, 448, 272, 24);
ctx.fillRect(472, 448, 272, 24);
ctx.fillRect(448, 496, 24, 280);
ctx.fillRect(320, 744, 128, 32);
      `,
      `
ctx.fillStyle = 'rgba(179, 36, 32, 1.000)';
ctx.fillRect(168, 24, 152, 24);
ctx.fillRect(472, 24, 160, 24);
ctx.fillRect(168, 48, 32, 96);
ctx.fillRect(472, 48, 24, 96);
ctx.fillRect(24, 168, 144, 32);
ctx.fillRect(624, 168, 152, 32);
ctx.fillRect(24, 200, 24, 96);
ctx.fillRect(624, 200, 24, 96);
ctx.fillRect(320, 320, 152, 24);
ctx.fillRect(320, 344, 24, 104);
ctx.fillRect(24, 472, 144, 24);
ctx.fillRect(624, 472, 152, 24);
ctx.fillRect(24, 496, 24, 104);
ctx.fillRect(624, 496, 24, 104);
ctx.fillRect(168, 624, 152, 24);
ctx.fillRect(472, 624, 160, 24);
ctx.fillRect(168, 648, 32, 96);
ctx.fillRect(472, 648, 24, 96);
ctx.fillStyle = 'rgba(179, 75, 23, 1.000)';
ctx.fillRect(320, 24, 152, 24);
ctx.fillRect(320, 48, 24, 152);
ctx.fillRect(168, 168, 152, 32);
ctx.fillRect(472, 168, 152, 32);
ctx.fillRect(168, 200, 32, 144);
ctx.fillRect(296, 296, 200, 24);
ctx.fillRect(24, 320, 144, 24);
ctx.fillRect(296, 320, 24, 152);
ctx.fillRect(624, 320, 152, 24);
ctx.fillRect(24, 344, 24, 104);
ctx.fillRect(168, 472, 32, 128);
ctx.fillRect(320, 624, 24, 120);
ctx.fillStyle = 'rgba(209, 43, 38, 1.000)';
ctx.fillRect(200, 48, 96, 96);
ctx.fillRect(496, 48, 104, 96);
ctx.fillRect(48, 200, 96, 96);
ctx.fillRect(648, 200, 96, 96);
ctx.fillRect(344, 344, 104, 104);
ctx.fillRect(48, 496, 96, 104);
ctx.fillRect(648, 496, 96, 104);
ctx.fillRect(200, 648, 96, 96);
ctx.fillRect(496, 648, 104, 96);
ctx.fillStyle = 'rgba(255, 52, 46, 1.000)';
ctx.fillRect(296, 48, 24, 120);
ctx.fillRect(600, 48, 32, 120);
ctx.fillRect(168, 144, 128, 24);
ctx.fillRect(472, 144, 128, 24);
ctx.fillRect(144, 200, 24, 120);
ctx.fillRect(744, 200, 32, 120);
ctx.fillRect(24, 296, 120, 24);
ctx.fillRect(624, 296, 120, 24);
ctx.fillRect(448, 344, 24, 128);
ctx.fillRect(320, 448, 128, 24);
ctx.fillRect(144, 496, 24, 136);
ctx.fillRect(744, 496, 32, 136);
ctx.fillRect(24, 600, 120, 32);
ctx.fillRect(624, 600, 120, 24);
ctx.fillRect(632, 624, 112, 8);
ctx.fillRect(296, 648, 24, 128);
ctx.fillRect(600, 648, 32, 128);
ctx.fillRect(168, 744, 128, 32);
ctx.fillRect(472, 744, 128, 32);
ctx.fillStyle = 'rgba(209, 88, 27, 1.000)';
ctx.fillRect(344, 48, 104, 248);
ctx.fillRect(200, 200, 144, 96);
ctx.fillRect(448, 200, 152, 96);
ctx.fillRect(200, 296, 96, 304);
ctx.fillRect(496, 296, 104, 304);
ctx.fillRect(48, 344, 152, 104);
ctx.fillRect(600, 344, 144, 104);
ctx.fillRect(296, 496, 200, 104);
ctx.fillRect(344, 600, 104, 144);
ctx.fillStyle = 'rgba(255, 107, 33, 1.000)';
ctx.fillRect(448, 48, 24, 152);
ctx.fillRect(600, 200, 24, 144);
ctx.fillRect(472, 320, 24, 176);
ctx.fillRect(744, 344, 32, 128);
ctx.fillRect(24, 448, 176, 24);
ctx.fillRect(600, 448, 144, 24);
ctx.fillRect(296, 472, 176, 24);
ctx.fillRect(600, 472, 24, 152);
ctx.fillRect(168, 600, 176, 24);
ctx.fillRect(448, 600, 152, 24);
ctx.fillRect(448, 624, 24, 152);
ctx.fillRect(320, 744, 128, 32);
      `
    ],
    all: [
      `
ctx.fillStyle = 'rgba(232, 201, 12, 1.000)';
ctx.fillRect(168, 24, 464, 24);
ctx.fillRect(168, 48, 32, 96);
ctx.fillRect(24, 168, 152, 32);
ctx.fillRect(624, 168, 152, 32);
ctx.fillRect(24, 200, 24, 400);
ctx.fillRect(624, 200, 24, 400);
ctx.fillRect(168, 624, 464, 24);
ctx.fillRect(168, 648, 32, 96);
ctx.fillStyle = 'rgba(250, 218, 13, 1.000)';
ctx.fillRect(200, 48, 400, 96);
ctx.fillRect(48, 200, 96, 400);
ctx.fillRect(648, 200, 96, 400);
ctx.fillRect(200, 648, 400, 96);
ctx.fillStyle = 'rgba(250, 236, 45, 1.000)';
ctx.fillRect(600, 48, 32, 120);
ctx.fillRect(168, 144, 432, 24);
ctx.fillRect(176, 168, 448, 8);
ctx.fillRect(144, 200, 32, 424);
ctx.fillRect(744, 200, 32, 432);
ctx.fillRect(24, 600, 120, 32);
ctx.fillRect(624, 600, 120, 24);
ctx.fillRect(144, 624, 24, 8);
ctx.fillRect(632, 624, 112, 8);
ctx.fillRect(600, 648, 32, 128);
ctx.fillRect(168, 744, 432, 32);
      `,
      `
ctx.fillStyle = 'rgba(232, 201, 12, 1.000)';
ctx.fillRect(168, 24, 464, 24);
ctx.fillRect(168, 48, 32, 96);
ctx.fillRect(320, 168, 24, 480);
ctx.fillRect(24, 320, 296, 24);
ctx.fillRect(472, 320, 304, 24);
ctx.fillRect(24, 344, 24, 104);
ctx.fillRect(168, 624, 152, 24);
ctx.fillRect(344, 624, 288, 24);
ctx.fillRect(168, 648, 32, 96);
ctx.fillStyle = 'rgba(250, 218, 13, 1.000)';
ctx.fillRect(200, 48, 400, 96);
ctx.fillRect(344, 168, 104, 456);
ctx.fillRect(48, 344, 272, 104);
ctx.fillRect(472, 344, 272, 104);
ctx.fillRect(200, 648, 400, 96);
ctx.fillStyle = 'rgba(250, 236, 45, 1.000)';
ctx.fillRect(600, 48, 32, 128);
ctx.fillRect(168, 144, 432, 24);
ctx.fillRect(168, 168, 152, 8);
ctx.fillRect(448, 168, 152, 8);
ctx.fillRect(448, 176, 32, 144);
ctx.fillRect(448, 320, 24, 304);
ctx.fillRect(744, 344, 32, 136);
ctx.fillRect(24, 448, 296, 32);
ctx.fillRect(472, 448, 272, 32);
ctx.fillRect(472, 480, 8, 144);
ctx.fillRect(600, 648, 32, 128);
ctx.fillRect(168, 744, 432, 32);
      `,
      `
ctx.fillStyle = 'rgba(232, 201, 12, 1.000)';
ctx.fillRect(168, 24, 464, 24);
ctx.fillRect(168, 48, 32, 96);
ctx.fillRect(24, 168, 152, 32);
ctx.fillRect(24, 200, 24, 400);
ctx.fillRect(320, 320, 160, 24);
ctx.fillRect(624, 320, 152, 24);
ctx.fillRect(320, 344, 24, 104);
ctx.fillRect(624, 344, 24, 104);
ctx.fillRect(168, 624, 464, 24);
ctx.fillRect(168, 648, 32, 96);
ctx.fillStyle = 'rgba(250, 218, 13, 1.000)';
ctx.fillRect(200, 48, 400, 96);
ctx.fillRect(48, 200, 96, 400);
ctx.fillRect(344, 344, 104, 104);
ctx.fillRect(648, 344, 96, 104);
ctx.fillRect(200, 648, 400, 96);
ctx.fillStyle = 'rgba(250, 236, 45, 1.000)';
ctx.fillRect(600, 48, 32, 128);
ctx.fillRect(168, 144, 432, 24);
ctx.fillRect(176, 168, 424, 8);
ctx.fillRect(144, 200, 32, 424);
ctx.fillRect(448, 344, 32, 136);
ctx.fillRect(744, 344, 32, 136);
ctx.fillRect(320, 448, 128, 32);
ctx.fillRect(624, 448, 120, 32);
ctx.fillRect(24, 600, 120, 32);
ctx.fillRect(144, 624, 24, 8);
ctx.fillRect(600, 648, 32, 128);
ctx.fillRect(168, 744, 432, 32);
      `
    ],
  },
  attack: {
    basic: [
      `
ctx.fillStyle = 'rgba(35, 125, 17, 1.000)';
ctx.fillRect(176, 176, 448, 40);
ctx.fillRect(176, 216, 40, 360);
ctx.fillStyle = 'rgba(41, 145, 20, 1.000)';
ctx.fillRect(216, 216, 360, 360);
ctx.fillStyle = 'rgba(53, 189, 26, 1.000)';
ctx.fillRect(576, 216, 48, 408);
ctx.fillRect(176, 576, 400, 48);
      `,
      `
ctx.fillStyle = 'rgba(32, 112, 16, 1.000)';
ctx.fillRect(128, 128, 544, 48);
ctx.fillRect(128, 176, 48, 440);
ctx.fillRect(440, 352, 48, 136);
ctx.fillRect(304, 440, 136, 48);
ctx.fillStyle = 'rgba(41, 145, 20, 1.000)';
ctx.fillRect(176, 176, 440, 128);
ctx.fillRect(176, 304, 128, 312);
ctx.fillRect(488, 304, 128, 312);
ctx.fillRect(304, 488, 184, 128);
ctx.fillStyle = 'rgba(52, 186, 26, 1.000)';
ctx.fillRect(616, 176, 56, 496);
ctx.fillRect(304, 304, 184, 48);
ctx.fillRect(304, 352, 136, 8);
ctx.fillRect(304, 360, 56, 80);
ctx.fillRect(128, 616, 488, 56);
      `,
      `
ctx.fillStyle = 'rgba(35, 125, 17, 1.000)';
ctx.fillRect(264, 40, 272, 48);
ctx.fillRect(264, 88, 40, 88);
ctx.fillRect(488, 88, 48, 88);
ctx.fillRect(128, 128, 136, 48);
ctx.fillRect(536, 128, 80, 48);
ctx.fillRect(128, 176, 48, 128);
ctx.fillRect(40, 264, 88, 40);
ctx.fillRect(616, 264, 144, 40);
ctx.fillRect(40, 304, 48, 232);
ctx.fillRect(440, 352, 48, 136);
ctx.fillRect(304, 440, 136, 48);
ctx.fillRect(88, 488, 88, 48);
ctx.fillRect(128, 536, 48, 80);
ctx.fillRect(264, 616, 40, 144);
ctx.fillStyle = 'rgba(41, 145, 20, 1.000)';
ctx.fillRect(304, 88, 184, 216);
ctx.fillRect(176, 176, 128, 440);
ctx.fillRect(488, 176, 128, 440);
ctx.fillRect(88, 304, 88, 184);
ctx.fillRect(616, 304, 88, 184);
ctx.fillRect(304, 488, 184, 216);
ctx.fillStyle = 'rgba(53, 189, 26, 1.000)';
ctx.fillRect(616, 128, 56, 136);
ctx.fillRect(304, 304, 184, 48);
ctx.fillRect(704, 304, 56, 232);
ctx.fillRect(304, 352, 136, 8);
ctx.fillRect(304, 360, 56, 80);
ctx.fillRect(616, 488, 88, 48);
ctx.fillRect(616, 536, 56, 136);
ctx.fillRect(128, 616, 136, 56);
ctx.fillRect(488, 616, 128, 56);
ctx.fillRect(488, 672, 48, 88);
ctx.fillRect(304, 704, 184, 56);
      `
    ],
    slow: [
      `
ctx.fillStyle = 'rgba(57, 175, 194, 1.000)';
ctx.fillRect(264, 0, 224, 40);
ctx.fillRect(264, 40, 40, 224);
ctx.fillRect(0, 264, 216, 40);
ctx.fillRect(272, 264, 32, 8);
ctx.fillRect(528, 264, 224, 40);
ctx.fillRect(0, 304, 40, 232);
ctx.fillRect(528, 304, 48, 224);
ctx.fillRect(264, 528, 224, 48);
ctx.fillRect(536, 528, 40, 8);
ctx.fillRect(264, 576, 40, 224);
ctx.fillStyle = 'rgba(160, 229, 250, 1.000)';
ctx.fillRect(488, 0, 48, 264);
ctx.fillRect(304, 216, 184, 56);
ctx.fillRect(216, 264, 56, 264);
ctx.fillRect(488, 264, 40, 8);
ctx.fillRect(752, 264, 48, 272);
ctx.fillRect(40, 488, 176, 48);
ctx.fillRect(576, 488, 176, 48);
ctx.fillRect(216, 528, 48, 8);
ctx.fillRect(488, 528, 48, 272);
ctx.fillRect(304, 752, 184, 48);
ctx.fillStyle = 'rgba(73, 226, 250, 1.000)';
ctx.fillRect(304, 40, 184, 176);
ctx.fillRect(40, 304, 176, 184);
ctx.fillRect(576, 304, 176, 184);
ctx.fillRect(304, 576, 184, 176);
      `,
      `
ctx.fillStyle = 'rgba(30, 57, 196, 1.000)';
ctx.fillRect(264, 0, 224, 40);
ctx.fillRect(264, 40, 40, 224);
ctx.fillRect(0, 264, 216, 40);
ctx.fillRect(272, 264, 32, 8);
ctx.fillRect(528, 264, 224, 40);
ctx.fillRect(0, 304, 40, 232);
ctx.fillRect(528, 304, 48, 224);
ctx.fillRect(264, 528, 224, 48);
ctx.fillRect(536, 528, 40, 8);
ctx.fillRect(264, 576, 40, 224);
ctx.fillStyle = 'rgba(89, 100, 255, 1.000)';
ctx.fillRect(488, 0, 48, 264);
ctx.fillRect(304, 216, 184, 56);
ctx.fillRect(216, 264, 56, 264);
ctx.fillRect(488, 264, 40, 8);
ctx.fillRect(752, 264, 48, 272);
ctx.fillRect(40, 488, 176, 48);
ctx.fillRect(576, 488, 176, 48);
ctx.fillRect(216, 528, 48, 8);
ctx.fillRect(488, 528, 48, 272);
ctx.fillRect(304, 752, 184, 48);
ctx.fillStyle = 'rgba(36, 70, 240, 1.000)';
ctx.fillRect(304, 40, 184, 176);
ctx.fillRect(40, 304, 176, 184);
ctx.fillRect(576, 304, 176, 184);
ctx.fillRect(304, 576, 184, 176);
      `,
      `
ctx.fillStyle = 'rgba(30, 57, 196, 1.000)';
ctx.fillRect(264, 0, 224, 40);
ctx.fillRect(264, 40, 40, 224);
ctx.fillRect(0, 264, 216, 40);
ctx.fillRect(528, 264, 224, 40);
ctx.fillRect(0, 304, 40, 232);
ctx.fillRect(528, 304, 48, 224);
ctx.fillRect(264, 528, 224, 48);
ctx.fillRect(536, 528, 40, 8);
ctx.fillRect(264, 576, 40, 224);
ctx.fillStyle = 'rgba(89, 100, 255, 1.000)';
ctx.fillRect(488, 0, 48, 264);
ctx.fillRect(304, 216, 184, 48);
ctx.fillRect(216, 264, 48, 272);
ctx.fillRect(752, 264, 48, 272);
ctx.fillRect(40, 488, 176, 48);
ctx.fillRect(576, 488, 176, 48);
ctx.fillRect(488, 528, 48, 272);
ctx.fillRect(304, 752, 184, 48);
ctx.fillStyle = 'rgba(36, 70, 240, 1.000)';
ctx.fillRect(304, 40, 184, 176);
ctx.fillRect(40, 304, 176, 184);
ctx.fillRect(576, 304, 176, 184);
ctx.fillRect(304, 576, 184, 176);
ctx.fillStyle = 'rgba(57, 175, 194, 1.000)';
ctx.fillRect(264, 264, 224, 40);
ctx.fillRect(264, 304, 40, 224);
ctx.fillStyle = 'rgba(160, 229, 250, 1.000)';
ctx.fillRect(488, 264, 40, 264);
ctx.fillRect(304, 488, 184, 40);
ctx.fillStyle = 'rgba(73, 226, 250, 1.000)';
ctx.fillRect(304, 304, 184, 184);
      `
    ],
    fast: [
      `
ctx.fillStyle = 'rgba(179, 36, 32, 1.000)';
ctx.fillRect(0, 264, 800, 40);
ctx.fillRect(0, 304, 40, 232);
ctx.fillStyle = 'rgba(209, 43, 38, 1.000)';
ctx.fillRect(40, 304, 712, 184);
ctx.fillStyle = 'rgba(255, 52, 46, 1.000)';
ctx.fillRect(752, 304, 48, 232);
ctx.fillRect(40, 488, 712, 48);
      `,
      `
ctx.fillStyle = 'rgba(179, 36, 32, 1.000)';
ctx.fillRect(176, 40, 360, 48);
ctx.fillRect(128, 88, 88, 40);
ctx.fillRect(488, 88, 96, 40);
ctx.fillRect(88, 128, 88, 48);
ctx.fillRect(528, 128, 96, 48);
ctx.fillRect(88, 176, 40, 128);
ctx.fillRect(576, 176, 96, 40);
ctx.fillRect(400, 304, 40, 184);
ctx.fillRect(88, 440, 312, 48);
ctx.fillRect(88, 488, 40, 128);
ctx.fillStyle = 'rgba(209, 43, 38, 1.000)';
ctx.fillRect(216, 88, 272, 216);
ctx.fillRect(176, 128, 40, 176);
ctx.fillRect(488, 128, 40, 536);
ctx.fillRect(128, 176, 48, 128);
ctx.fillRect(528, 176, 48, 440);
ctx.fillRect(576, 216, 40, 360);
ctx.fillRect(440, 304, 48, 400);
ctx.fillRect(128, 488, 312, 128);
ctx.fillRect(176, 616, 264, 48);
ctx.fillRect(216, 664, 224, 40);
ctx.fillStyle = 'rgba(255, 52, 46, 1.000)';
ctx.fillRect(616, 216, 56, 408);
ctx.fillRect(88, 304, 312, 56);
ctx.fillRect(576, 576, 40, 96);
ctx.fillRect(88, 616, 88, 56);
ctx.fillRect(528, 616, 48, 96);
ctx.fillRect(616, 624, 8, 48);
ctx.fillRect(176, 664, 40, 96);
ctx.fillRect(488, 664, 40, 96);
ctx.fillRect(128, 672, 48, 40);
ctx.fillRect(576, 672, 8, 40);
ctx.fillRect(216, 704, 272, 56);
ctx.fillRect(528, 712, 8, 48);
      `,
      `
ctx.fillStyle = 'rgba(179, 75, 23, 1.000)';
ctx.fillRect(0, 40, 672, 48);
ctx.fillRect(0, 88, 40, 40);
ctx.fillRect(616, 88, 96, 40);
ctx.fillRect(664, 128, 96, 48);
ctx.fillRect(704, 176, 96, 40);
ctx.fillRect(528, 352, 48, 136);
ctx.fillRect(176, 440, 352, 48);
ctx.fillRect(128, 488, 88, 40);
ctx.fillRect(88, 528, 88, 48);
ctx.fillRect(40, 576, 88, 40);
ctx.fillRect(0, 616, 88, 48);
ctx.fillRect(0, 664, 40, 40);
ctx.fillStyle = 'rgba(209, 88, 27, 1.000)';
ctx.fillRect(40, 88, 576, 40);
ctx.fillRect(88, 128, 576, 48);
ctx.fillRect(128, 176, 576, 40);
ctx.fillRect(176, 216, 576, 48);
ctx.fillRect(216, 264, 536, 40);
ctx.fillRect(576, 304, 176, 272);
ctx.fillRect(216, 488, 360, 216);
ctx.fillRect(176, 528, 40, 176);
ctx.fillRect(128, 576, 48, 128);
ctx.fillRect(576, 576, 128, 40);
ctx.fillRect(88, 616, 40, 88);
ctx.fillRect(576, 616, 88, 48);
ctx.fillRect(40, 664, 48, 40);
ctx.fillRect(576, 664, 40, 40);
ctx.fillStyle = 'rgba(255, 107, 33, 1.000)';
ctx.fillRect(0, 128, 88, 56);
ctx.fillRect(88, 176, 40, 96);
ctx.fillRect(40, 184, 48, 40);
ctx.fillRect(128, 216, 48, 96);
ctx.fillRect(752, 216, 48, 408);
ctx.fillRect(176, 264, 40, 96);
ctx.fillRect(216, 304, 360, 48);
ctx.fillRect(216, 352, 312, 8);
ctx.fillRect(704, 576, 48, 96);
ctx.fillRect(664, 616, 40, 96);
ctx.fillRect(752, 624, 8, 48);
ctx.fillRect(616, 664, 48, 96);
ctx.fillRect(704, 672, 8, 40);
ctx.fillRect(0, 704, 616, 56);
ctx.fillRect(664, 712, 8, 48);
      `
    ],
    all: [
      `
ctx.fillStyle = 'rgba(232, 201, 12, 1.000)';
ctx.fillRect(0, 40, 800, 48);
ctx.fillRect(0, 88, 40, 176);
ctx.fillRect(0, 488, 800, 40);
ctx.fillRect(0, 528, 40, 176);
ctx.fillStyle = 'rgba(250, 218, 13, 1.000)';
ctx.fillRect(40, 88, 712, 176);
ctx.fillRect(40, 528, 712, 176);
ctx.fillStyle = 'rgba(250, 236, 45, 1.000)';
ctx.fillRect(752, 88, 48, 224);
ctx.fillRect(0, 264, 752, 48);
ctx.fillRect(752, 528, 48, 232);
ctx.fillRect(0, 704, 752, 56);
      `,
      `
ctx.fillStyle = 'rgba(230, 170, 50, 1.000)';
ctx.fillRect(0, 40, 800, 48);
ctx.fillRect(0, 88, 40, 176);
ctx.fillRect(0, 488, 800, 40);
ctx.fillRect(0, 528, 40, 176);
ctx.fillStyle = 'rgba(250, 185, 55, 1.000)';
ctx.fillRect(40, 88, 712, 176);
ctx.fillRect(40, 528, 712, 176);
ctx.fillStyle = 'rgba(255, 209, 84, 1.000)';
ctx.fillRect(752, 88, 48, 224);
ctx.fillRect(0, 264, 752, 48);
ctx.fillRect(752, 528, 48, 232);
ctx.fillRect(0, 704, 752, 56);
      `,
      `
ctx.fillStyle = 'rgba(222, 125, 60, 1.000)';
ctx.fillRect(0, 40, 800, 48);
ctx.fillRect(0, 88, 40, 176);
ctx.fillRect(0, 488, 800, 40);
ctx.fillRect(0, 528, 40, 176);
ctx.fillStyle = 'rgba(250, 141, 68, 1.000)';
ctx.fillRect(40, 88, 712, 176);
ctx.fillRect(40, 528, 712, 176);
ctx.fillStyle = 'rgba(250, 182, 122, 1.000)';
ctx.fillRect(752, 88, 48, 224);
ctx.fillRect(0, 264, 752, 48);
ctx.fillRect(752, 528, 48, 232);
ctx.fillRect(0, 704, 752, 56);
      `
    ],
  },
  tiles: {
    basic: 
    `
ctx.fillStyle = 'rgba(36, 128, 18, 1.000)';
ctx.fillRect(160, 0, 452, 24);
ctx.fillRect(160, 24, 24, 108);
ctx.fillRect(0, 160, 132, 24);
ctx.fillRect(640, 160, 132, 24);
ctx.fillRect(0, 184, 24, 428);
ctx.fillRect(640, 184, 24, 160);
ctx.fillRect(132, 320, 508, 24);
ctx.fillRect(160, 640, 452, 24);
ctx.fillRect(160, 664, 24, 108);
ctx.fillStyle = 'rgba(47, 166, 23, 1.000)';
ctx.fillRect(612, 0, 28, 24);
ctx.fillRect(160, 132, 24, 28);
ctx.fillRect(132, 160, 28, 160);
ctx.fillRect(772, 160, 28, 24);
ctx.fillRect(0, 612, 24, 28);
ctx.fillRect(640, 612, 24, 28);
ctx.fillRect(612, 640, 28, 24);
ctx.fillRect(160, 772, 24, 28);
ctx.fillStyle = 'rgba(41, 145, 20, 1.000)';
ctx.fillRect(184, 24, 428, 108);
ctx.fillRect(24, 184, 108, 428);
ctx.fillRect(664, 184, 108, 428);
ctx.fillRect(132, 344, 532, 108);
ctx.fillRect(640, 452, 24, 28);
ctx.fillRect(184, 664, 428, 108);
ctx.fillStyle = 'rgba(49, 173, 24, 1.000)';
ctx.fillRect(612, 24, 28, 136);
ctx.fillRect(184, 132, 428, 28);
ctx.fillRect(772, 184, 28, 456);
ctx.fillRect(132, 452, 508, 28);
ctx.fillRect(132, 480, 28, 160);
ctx.fillRect(24, 612, 108, 28);
ctx.fillRect(664, 612, 108, 28);
ctx.fillRect(612, 664, 28, 136);
ctx.fillRect(184, 772, 428, 28);
ctx.fillStyle = 'rgba(38, 135, 19, 1.000)';
ctx.fillRect(640, 480, 24, 132);
    `,
    slow: 
    `
ctx.fillStyle = 'rgba(30, 57, 196, 1.000)';
ctx.fillRect(160, 0, 480, 24);
ctx.fillRect(160, 24, 24, 160);
ctx.fillRect(0, 160, 160, 24);
ctx.fillRect(480, 160, 24, 132);
ctx.fillRect(640, 160, 160, 24);
ctx.fillRect(0, 184, 24, 428);
ctx.fillRect(320, 320, 160, 24);
ctx.fillRect(640, 320, 24, 184);
ctx.fillRect(320, 344, 24, 108);
ctx.fillRect(160, 480, 160, 24);
ctx.fillRect(480, 480, 160, 24);
ctx.fillRect(480, 504, 24, 160);
ctx.fillRect(160, 640, 24, 160);
ctx.fillRect(320, 640, 160, 24);
ctx.fillStyle = 'rgba(36, 70, 240, 1.000)';
ctx.fillRect(184, 24, 428, 108);
ctx.fillRect(184, 132, 108, 160);
ctx.fillRect(504, 132, 108, 160);
ctx.fillRect(24, 184, 160, 108);
ctx.fillRect(612, 184, 160, 108);
ctx.fillRect(24, 292, 108, 320);
ctx.fillRect(664, 292, 108, 320);
ctx.fillRect(344, 344, 108, 108);
ctx.fillRect(132, 504, 160, 108);
ctx.fillRect(504, 504, 160, 108);
ctx.fillRect(184, 612, 108, 160);
ctx.fillRect(504, 612, 108, 160);
ctx.fillRect(292, 664, 212, 108);
ctx.fillStyle = 'rgba(89, 100, 255, 1.000)';
ctx.fillRect(612, 24, 28, 160);
ctx.fillRect(292, 132, 212, 28);
ctx.fillRect(292, 160, 28, 160);
ctx.fillRect(772, 184, 28, 456);
ctx.fillRect(132, 292, 160, 28);
ctx.fillRect(480, 292, 184, 28);
ctx.fillRect(132, 320, 28, 184);
ctx.fillRect(452, 344, 28, 136);
ctx.fillRect(320, 452, 132, 28);
ctx.fillRect(292, 504, 28, 160);
ctx.fillRect(0, 612, 184, 28);
ctx.fillRect(612, 612, 160, 28);
ctx.fillRect(612, 640, 28, 160);
ctx.fillRect(184, 772, 428, 28);
ctx.fillStyle = 'rgba(57, 175, 194, 1.000)';
ctx.fillRect(320, 160, 160, 24);
ctx.fillRect(320, 184, 24, 108);
ctx.fillRect(160, 320, 160, 24);
ctx.fillRect(480, 320, 160, 24);
ctx.fillRect(160, 344, 24, 108);
ctx.fillRect(480, 344, 24, 108);
ctx.fillRect(320, 480, 160, 24);
ctx.fillRect(320, 504, 24, 108);
ctx.fillStyle = 'rgba(73, 226, 250, 1.000)';
ctx.fillRect(344, 184, 108, 108);
ctx.fillRect(184, 344, 108, 108);
ctx.fillRect(504, 344, 108, 108);
ctx.fillRect(344, 504, 108, 108);
ctx.fillStyle = 'rgba(160, 229, 250, 1.000)';
ctx.fillRect(452, 184, 28, 136);
ctx.fillRect(320, 292, 132, 28);
ctx.fillRect(292, 344, 28, 136);
ctx.fillRect(612, 344, 28, 136);
ctx.fillRect(160, 452, 132, 28);
ctx.fillRect(480, 452, 132, 28);
ctx.fillRect(452, 504, 28, 136);
ctx.fillRect(320, 612, 132, 28);
    `,
    fast: 
    `
ctx.fillStyle = 'rgba(179, 75, 23, 1.000)';
ctx.fillRect(320, 0, 160, 24);
ctx.fillRect(320, 24, 24, 108);
ctx.fillRect(0, 320, 160, 24);
ctx.fillRect(320, 320, 160, 24);
ctx.fillRect(640, 320, 160, 24);
ctx.fillRect(0, 344, 24, 108);
ctx.fillRect(320, 344, 24, 108);
ctx.fillRect(640, 344, 24, 108);
ctx.fillRect(320, 640, 160, 24);
ctx.fillRect(320, 664, 24, 108);
ctx.fillStyle = 'rgba(209, 88, 27, 1.000)';
ctx.fillRect(344, 24, 108, 108);
ctx.fillRect(24, 344, 108, 108);
ctx.fillRect(344, 344, 108, 108);
ctx.fillRect(664, 344, 108, 108);
ctx.fillRect(344, 664, 108, 108);
ctx.fillStyle = 'rgba(255, 107, 33, 1.000)';
ctx.fillRect(452, 24, 28, 136);
ctx.fillRect(320, 132, 132, 28);
ctx.fillRect(132, 344, 28, 136);
ctx.fillRect(452, 344, 28, 136);
ctx.fillRect(772, 344, 28, 136);
ctx.fillRect(0, 452, 132, 28);
ctx.fillRect(320, 452, 132, 28);
ctx.fillRect(640, 452, 132, 28);
ctx.fillRect(452, 664, 28, 136);
ctx.fillRect(320, 772, 132, 28);
ctx.fillStyle = 'rgba(179, 36, 32, 1.000)';
ctx.fillRect(160, 160, 480, 24);
ctx.fillRect(160, 184, 24, 428);
ctx.fillRect(480, 292, 24, 212);
ctx.fillRect(292, 480, 188, 24);
ctx.fillStyle = 'rgba(209, 43, 38, 1.000)';
ctx.fillRect(184, 184, 428, 108);
ctx.fillRect(184, 292, 108, 320);
ctx.fillRect(504, 292, 108, 320);
ctx.fillRect(292, 504, 212, 108);
ctx.fillStyle = 'rgba(255, 52, 46, 1.000)';
ctx.fillRect(612, 184, 28, 456);
ctx.fillRect(292, 292, 188, 28);
ctx.fillRect(292, 320, 28, 160);
ctx.fillRect(160, 612, 452, 28);
    `,
    all: 
    `
ctx.fillStyle = 'rgba(232, 201, 12, 1.000)';
ctx.fillRect(160, 0, 480, 24);
ctx.fillRect(160, 24, 24, 104);
ctx.fillRect(0, 160, 160, 24);
ctx.fillRect(640, 160, 160, 24);
ctx.fillRect(0, 184, 24, 424);
ctx.fillRect(640, 184, 24, 424);
ctx.fillRect(160, 640, 480, 24);
ctx.fillRect(160, 664, 24, 104);
ctx.fillStyle = 'rgba(250, 218, 13, 1.000)';
ctx.fillRect(184, 24, 424, 104);
ctx.fillRect(24, 184, 104, 424);
ctx.fillRect(664, 184, 104, 424);
ctx.fillRect(184, 664, 424, 104);
ctx.fillStyle = 'rgba(250, 236, 45, 1.000)';
ctx.fillRect(608, 24, 32, 136);
ctx.fillRect(160, 128, 448, 32);
ctx.fillRect(128, 184, 32, 456);
ctx.fillRect(768, 184, 32, 456);
ctx.fillRect(0, 608, 128, 32);
ctx.fillRect(640, 608, 128, 32);
ctx.fillRect(608, 664, 32, 136);
ctx.fillRect(160, 768, 448, 32);
    `
  },
  board: {
    border: 
    `
ctx.fillStyle = 'rgba(107, 106, 106, 1.000)';
ctx.fillRect(16, 16, 768, 16);
ctx.fillRect(16, 32, 16, 752);
ctx.fillRect(68, 32, 16, 52);
ctx.fillRect(32, 68, 36, 16);
ctx.fillRect(728, 68, 36, 16);
ctx.fillRect(712, 84, 16, 644);
ctx.fillRect(84, 712, 628, 16);
ctx.fillRect(68, 728, 16, 36);
ctx.fillStyle = 'rgba(129, 129, 129, 1.000)';
ctx.fillRect(32, 32, 36, 36);
ctx.fillRect(84, 32, 628, 36);
ctx.fillRect(728, 32, 36, 36);
ctx.fillRect(32, 84, 36, 628);
ctx.fillRect(84, 84, 628, 628);
ctx.fillRect(728, 84, 36, 628);
ctx.fillRect(32, 728, 36, 36);
ctx.fillRect(84, 728, 628, 36);
ctx.fillRect(728, 728, 36, 36);
ctx.fillStyle = 'rgba(163, 163, 163, 1.000)';
ctx.fillRect(712, 32, 16, 52);
ctx.fillRect(764, 32, 20, 752);
ctx.fillRect(84, 68, 628, 16);
ctx.fillRect(68, 84, 16, 644);
ctx.fillRect(32, 712, 36, 16);
ctx.fillRect(728, 712, 36, 16);
ctx.fillRect(712, 728, 16, 56);
ctx.fillRect(32, 764, 680, 20);
ctx.fillRect(728, 764, 36, 20);
    `,
    wall: 
    `
ctx.fillStyle = 'rgba(189, 179, 179, 1.000)';
ctx.fillRect(96, 0, 576, 16);
ctx.fillRect(96, 16, 16, 96);
ctx.fillRect(0, 96, 96, 16);
ctx.fillRect(704, 96, 64, 16);
ctx.fillRect(0, 112, 16, 592);
ctx.fillRect(96, 688, 16, 80);
ctx.fillStyle = 'rgba(189, 179, 179, 1.000)';
ctx.fillRect(672, 0, 32, 16);
ctx.fillRect(96, 768, 16, 32);
ctx.fillStyle = 'rgba(207, 196, 196, 1.000)';
ctx.fillRect(112, 16, 560, 80);
ctx.fillRect(16, 112, 80, 560);
ctx.fillRect(112, 112, 560, 16);
ctx.fillRect(704, 112, 64, 560);
ctx.fillRect(112, 128, 544, 544);
ctx.fillRect(656, 176, 16, 496);
ctx.fillRect(112, 688, 560, 80);
ctx.fillStyle = 'rgba(219, 208, 208, 1.000)';
ctx.fillRect(672, 16, 32, 80);
ctx.fillRect(112, 96, 560, 16);
ctx.fillRect(768, 96, 32, 608);
ctx.fillRect(96, 112, 16, 560);
ctx.fillRect(16, 672, 80, 32);
ctx.fillRect(704, 672, 64, 32);
ctx.fillRect(672, 704, 32, 96);
ctx.fillRect(112, 768, 560, 32);
ctx.fillStyle = 'rgba(219, 208, 208, 1.000)';
ctx.fillRect(672, 96, 32, 16);
ctx.fillRect(688, 112, 16, 560);
ctx.fillRect(672, 688, 32, 16);
ctx.fillStyle = 'rgba(207, 196, 196, 1.000)';
ctx.fillRect(672, 112, 16, 560);
ctx.fillRect(656, 128, 16, 48);
ctx.fillStyle = 'rgba(211, 202, 202, 1.000)';
ctx.fillRect(96, 672, 608, 16);
    `,
    wallSelected: 
    `
ctx.fillStyle = 'rgba(198, 224, 222, 1.000)';
ctx.fillRect(96, 0, 576, 16);
ctx.fillRect(96, 16, 16, 80);
ctx.fillRect(0, 96, 96, 16);
ctx.fillRect(688, 96, 80, 16);
ctx.fillRect(0, 112, 16, 560);
ctx.fillRect(96, 688, 16, 80);
ctx.fillStyle = 'rgba(206, 237, 235, 1.000)';
ctx.fillRect(672, 0, 32, 16);
ctx.fillRect(96, 96, 16, 16);
ctx.fillRect(672, 96, 16, 16);
ctx.fillRect(768, 96, 16, 16);
ctx.fillRect(0, 672, 16, 32);
ctx.fillRect(96, 672, 16, 16);
ctx.fillRect(96, 768, 16, 32);
ctx.fillStyle = 'rgba(195, 224, 222, 1.000)';
ctx.fillRect(112, 16, 560, 80);
ctx.fillRect(16, 112, 80, 560);
ctx.fillRect(688, 112, 80, 560);
ctx.fillRect(112, 688, 560, 80);
ctx.fillStyle = 'rgba(206, 237, 235, 1.000)';
ctx.fillRect(672, 16, 32, 80);
ctx.fillRect(112, 96, 560, 16);
ctx.fillRect(784, 96, 16, 608);
ctx.fillRect(96, 112, 16, 560);
ctx.fillRect(768, 112, 16, 592);
ctx.fillRect(16, 672, 80, 32);
ctx.fillRect(688, 672, 80, 32);
ctx.fillRect(672, 688, 16, 112);
ctx.fillRect(688, 704, 16, 96);
ctx.fillRect(112, 768, 560, 32);
ctx.fillStyle = 'rgba(207, 196, 196, 1.000)';
ctx.fillRect(112, 112, 560, 560);
ctx.fillStyle = 'rgba(171, 196, 195, 1.000)';
ctx.fillRect(672, 112, 16, 576);
ctx.fillRect(112, 672, 560, 16);
    `,
    start: 
    `
ctx.fillStyle = 'rgba(207, 196, 196, 1.000)';
ctx.fillRect(80, 0, 600, 80);
ctx.fillRect(0, 80, 80, 600);
ctx.fillRect(720, 80, 40, 600);
ctx.fillRect(80, 720, 600, 40);
ctx.fillStyle = 'rgba(219, 208, 208, 1.000)';
ctx.fillRect(680, 0, 40, 80);
ctx.fillRect(760, 80, 40, 640);
ctx.fillRect(0, 680, 80, 40);
ctx.fillRect(720, 680, 40, 40);
ctx.fillRect(680, 720, 40, 80);
ctx.fillRect(80, 760, 600, 40);
ctx.fillStyle = 'rgba(74, 84, 133, 1.000)';
ctx.fillRect(80, 80, 600, 40);
ctx.fillRect(80, 120, 40, 520);
ctx.fillStyle = 'rgba(74, 84, 133, 1.000)';
ctx.fillRect(680, 80, 40, 40);
ctx.fillRect(80, 640, 40, 80);
ctx.fillStyle = 'rgba(90, 102, 161, 1.000)';
ctx.fillRect(120, 120, 520, 360);
ctx.fillRect(120, 480, 80, 160);
ctx.fillRect(240, 480, 400, 160);
ctx.fillRect(200, 520, 40, 120);
ctx.fillStyle = 'rgba(90, 102, 161, 1.000)';
ctx.fillRect(640, 120, 40, 560);
ctx.fillRect(200, 480, 40, 40);
ctx.fillRect(120, 640, 520, 40);
ctx.fillStyle = 'rgba(111, 126, 199, 1.000)';
ctx.fillRect(680, 120, 40, 600);
ctx.fillRect(120, 680, 560, 40);
    `,
    goal: 
    `
ctx.fillStyle = 'rgba(207, 196, 196, 1.000)';
ctx.fillRect(80, 0, 600, 80);
ctx.fillRect(0, 80, 80, 600);
ctx.fillRect(720, 80, 40, 600);
ctx.fillRect(80, 720, 600, 40);
ctx.fillStyle = 'rgba(219, 208, 208, 1.000)';
ctx.fillRect(680, 0, 40, 80);
ctx.fillRect(760, 80, 40, 640);
ctx.fillRect(0, 680, 80, 40);
ctx.fillRect(720, 680, 40, 40);
ctx.fillRect(680, 720, 40, 80);
ctx.fillRect(80, 760, 600, 40);
ctx.fillStyle = 'rgba(143, 29, 26, 1.000)';
ctx.fillRect(80, 80, 600, 40);
ctx.fillRect(80, 120, 40, 520);
ctx.fillStyle = 'rgba(143, 29, 26, 1.000)';
ctx.fillRect(680, 80, 40, 40);
ctx.fillRect(80, 640, 40, 80);
ctx.fillStyle = 'rgba(179, 36, 32, 1.000)';
ctx.fillRect(120, 120, 520, 280);
ctx.fillRect(120, 400, 480, 240);
ctx.fillRect(600, 480, 40, 160);
ctx.fillStyle = 'rgba(179, 36, 32, 1.000)';
ctx.fillRect(640, 120, 40, 560);
ctx.fillRect(600, 400, 40, 80);
ctx.fillRect(120, 640, 520, 40);
ctx.fillStyle = 'rgba(209, 43, 38, 1.000)';
ctx.fillRect(680, 120, 40, 600);
ctx.fillRect(120, 680, 560, 40);
    `
  }
};

// ---- Canvas 构建器（将 recipes 渲染为离屏 canvas） ----

const TYPE_LIST = ["basic", "slow", "fast", "all"];

function createCanvas(width, height) {
  const canvas = document.createElement("canvas");
  canvas.width = width;
  canvas.height = height;
  return canvas;
}

const __FN_CACHE__ = new Map();

function buildCanvasFromCode(code, targetW, targetH, recipeBaseSize = 800) {
  const normalized = typeof code === "string" ? code.replace(/1\.000/g, "1").replace(/rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*1\s*\)/g, "rgb($1, $2, $3)") : code;
  let fn = __FN_CACHE__.get(normalized);
  if (!fn) {
    fn = new Function("ctx", normalized);
    __FN_CACHE__.set(normalized, fn);
  }

  // 记录器：拦截 fillStyle 和 fillRect，记录操作以进行无损合并
  const operations = [];
  const recorder = {
    _fillStyle: null,
    set fillStyle(v) {
      operations.push({ kind: "style", value: v });
      this._fillStyle = v;
    },
    get fillStyle() {
      return this._fillStyle;
    },
    fillRect(x, y, w, h) {
      operations.push({ kind: "rect", x, y, w, h });
    },
  };

  // 执行绘制到记录器
  fn(recorder);

  // 合并算法：针对连续相同颜色块合并同向相邻矩形（零视觉差）
  function mergeColinearRects(rects) {
    if (rects.length <= 1) return rects;
    // 水平合并（同 y、h，且相邻）
    rects.sort((a, b) => (a.y - b.y) || (a.h - b.h) || (a.x - b.x));
    const horiz = [];
    for (const r of rects) {
      const last = horiz[horiz.length - 1];
      if (last && last.y === r.y && last.h === r.h && last.x + last.w === r.x) {
        last.w += r.w;
      } else {
        horiz.push({ ...r });
      }
    }
    // 垂直合并（同 x、w，且相邻）
    horiz.sort((a, b) => (a.x - b.x) || (a.w - b.w) || (a.y - b.y));
    const vert = [];
    for (const r of horiz) {
      const last = vert[vert.length - 1];
      if (last && last.x === r.x && last.w === r.w && last.y + last.h === r.y) {
        last.h += r.h;
      } else {
        vert.push({ ...r });
      }
    }
    return vert;
  }

  function optimizeOps(ops) {
    const out = [];
    let currColor = null;
    let rects = [];
    const flush = () => {
      if (!rects.length) return;
      const merged = mergeColinearRects(rects);
      merged.forEach((r) => out.push({ kind: "rect", ...r }));
      rects = [];
    };
    for (const op of ops) {
      if (op.kind === "style") {
        const color = op.value;
        if (currColor !== color) {
          flush();
          currColor = color;
          out.push({ kind: "style", value: color });
        }
      } else if (op.kind === "rect") {
        rects.push(op);
      }
    }
    flush();
    return out;
  }

  const optimizedOps = optimizeOps(operations);

  // 真实绘制到目标 canvas（按原缩放）
  const canvas = createCanvas(targetW, targetH);
  const ctx = canvas.getContext("2d");
  ctx.save();
  const scaleX = targetW / recipeBaseSize;
  const scaleY = targetH / recipeBaseSize;
  ctx.scale(scaleX, scaleY);
  let appliedStyle = null;
  for (const op of optimizedOps) {
    if (op.kind === "style") {
      if (appliedStyle !== op.value) {
        ctx.fillStyle = op.value;
        appliedStyle = op.value;
      }
    } else if (op.kind === "rect") {
      ctx.fillRect(op.x, op.y, op.w, op.h);
    }
  }
  ctx.restore();
  return canvas;
}

async function toDrawable(canvas) {
  try {
    if (typeof createImageBitmap === "function") {
      return await createImageBitmap(canvas);
    }
  } catch (e) {}
  return canvas;
}

export class CanvasSpriteBuilder {
  constructor() {}

  buildAll() {
    const towers = this.buildTowers();
    const attacks = this.buildAttacks();
    const tiles = this.buildTiles();
    const board = this.buildBoard();
    return { towers, attacks, tiles, board };
  }

  buildTowers() {
    const result = {};
    TYPE_LIST.forEach((type) => {
      result[type] = [0, 1, 2].map((lvl) =>
        buildCanvasFromCode(recipes.tower?.[type]?.[lvl] || "", 32, 32)
      );
    });
    return result;
  }

  buildAttacks() {
    const result = {};
    TYPE_LIST.forEach((type) => {
      result[type] = [0, 1, 2].map((lvl) =>
        buildCanvasFromCode(recipes.attack?.[type]?.[lvl] || "", 18, 18)
      );
    });
    return result;
  }

  buildTiles() {
    const result = {};
    TYPE_LIST.forEach((type) => {
      result[type] = buildCanvasFromCode(recipes.tiles?.[type] || "", 50, 50);
    });
    return result;
  }

  buildBoard() {
    return {
      border: buildCanvasFromCode(recipes.board?.border || "", 40, 40),
      wall: buildCanvasFromCode(recipes.board?.wall || "", 40, 40),
      wallSelected: buildCanvasFromCode(recipes.board?.wallSelected || "", 40, 40),
      start: buildCanvasFromCode(recipes.board?.start || "", 40, 40),
      goal: buildCanvasFromCode(recipes.board?.goal || "", 40, 40),
    };
  }
}

export const TYPES = TYPE_LIST;

// 不再默认导出，避免误用